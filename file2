
#OPENWEATHERMAP API

import requests
import sqlite3
import matplotlib.pyplot as plt

# Predefined list of 100 popular cities in the United States
cities_list = [
    'New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Philadelphia', 'San Antonio', 'San Diego', 'Dallas', 'San Jose',
    'Austin', 'Jacksonville', 'Fort Worth', 'Columbus', 'Charlotte', 'San Francisco', 'Indianapolis', 'Seattle', 'Denver', 'Washington',
    'Boston', 'El Paso', 'Nashville', 'Detroit', 'Oklahoma City', 'Portland', 'Las Vegas', 'Memphis', 'Louisville', 'Baltimore',
    'Milwaukee', 'Albuquerque', 'Tucson', 'Fresno', 'Sacramento', 'Mesa', 'Kansas City', 'Atlanta', 'Long Beach', 'Colorado Springs',
    'Raleigh', 'Miami', 'Virginia Beach', 'Omaha', 'Oakland', 'Minneapolis', 'Tulsa', 'Arlington', 'New Orleans', 'Wichita',
    'Cleveland', 'Tampa', 'Bakersfield', 'Aurora', 'Anaheim', 'Honolulu', 'Santa Ana', 'Corpus Christi', 'Riverside', 'Lexington',
    'St. Louis', 'Stockton', 'Pittsburgh', 'Anchorage', 'Cincinnati', 'Saint Paul', 'Greensboro', 'Toledo', 'Newark', 'Plano',
    'Henderson', 'Lincoln', 'Orlando', 'Jersey City', 'Chula Vista', 'Buffalo', 'Fort Wayne', 'Chandler', 'St. Petersburg', 'Laredo',
    'Durham', 'Irvine', 'Madison', 'Norfolk', 'Lubbock', 'Gilbert', 'Winston-Salem', 'Glendale', 'Reno', 'Hialeah', 'Garland',
    'Chesapeake', 'Irving', 'North Las Vegas', 'Scottsdale', 'Baton Rouge', 'Fremont', 'Richmond', 'Boise', 'San Bernardino'
]

def fetch_weather_data(api_key, city_name):
    url = f"http://api.openweathermap.org/data/2.5/weather?q={city_name}&appid={api_key}"
    response = requests.get(url)
    if response.status_code == 200:
        return response.json()
    else:
        print(f"Failed to fetch data for {city_name} from OpenWeatherMap API")
        return None

def create_database_and_insert_weather(api_key, city_name):
    # Fetch weather data from the API
    weather_data = fetch_weather_data(api_key, city_name)
    if not weather_data:
        return
    
    # Connect to SQLite database
    conn = sqlite3.connect('weather_data.db')
    c = conn.cursor()

    # Create table if it doesn't exist
    c.execute('''CREATE TABLE IF NOT EXISTS weather (
                 city TEXT,
                 temperature REAL,
                 humidity INTEGER,
                 wind_speed REAL
                 )''')

    # Insert data into the table
    c.execute('''INSERT INTO weather (city, temperature, humidity, wind_speed)
                 VALUES (?, ?, ?, ?)''', (city_name,
                                           weather_data['main']['temp'],
                                           weather_data['main']['humidity'],
                                           weather_data['wind']['speed']))

    conn.commit()
    conn.close()
    print(f"Weather data for {city_name} inserted successfully.")
    
def print_weather_data():
    conn = sqlite3.connect('weather_data.db')
    c = conn.cursor()

    c.execute("SELECT * FROM weather_data")
    rows = c.fetchall()

    for row in rows:
        print(row)

    conn.close()   


def plot_weather_data(city_data):
    plt.figure(figsize=(12, 6))
    for city, data in city_data.items():
        plt.plot(['Temperature', 'Humidity', 'Wind Speed'], data, label=city)
    plt.xlabel('Measure')
    plt.ylabel('Values')
    plt.title('Weather Data Visualization')
    plt.legend()
    plt.grid(True)
    plt.show()

def main():
    api_key = 'bfc9dd88f5347d803ecfdd0a93698186'
    city_data = {}

    for city_name in cities_list[:25]:  # Fetching weather data for the first 25 cities
        data = fetch_weather_data(api_key, city_name)
        if data:
            create_database_and_insert_weather(api_key, city_name)
            city_data[city_name] = [
                data['main']['temp'],
                data['main']['humidity'],
                data['wind']['speed']
            ]
    print_weather_data()
    plot_weather_data(city_data)
    

if __name__ == "__main__":
    main()

if __name__ == "__main__":
    main()